
[2023-12-24 01:23:51] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:23:51] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:23:51] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:23:51] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:23:51] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:02] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:02] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:02] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:02] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:02] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:04] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:04] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:04] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:04] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:04] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:57] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:57] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:57] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:57] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:24:57] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:26:35] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:26:35] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:26:35] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:26:35] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 01:26:35] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.UndefinedColumn) column order.recipient_name does not exist
LINE 1: ...er".user_account AS bookmazon_order_user_account, bookmazon....
                                                             ^

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:50:58] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.InsufficientPrivilege) permission denied for table order

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:50:58] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.InsufficientPrivilege) permission denied for table order

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:50:58] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.InsufficientPrivilege) permission denied for table order

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:50:58] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.InsufficientPrivilege) permission denied for table order

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:50:58] {OrderService.py:82} ERROR - Get user order error¡G(psycopg2.errors.InsufficientPrivilege) permission denied for table order

[SQL: SELECT bookmazon."order".order_id AS bookmazon_order_order_id, bookmazon."order".user_account AS bookmazon_order_user_account, bookmazon."order".recipient_name AS bookmazon_order_recipient_name, bookmazon."order".order_total_price AS bookmazon_order_order_total_price, bookmazon."order".order_status AS bookmazon_order_order_status, bookmazon."order".payment_status AS bookmazon_order_payment_status, bookmazon."order".shipping_status AS bookmazon_order_shipping_status, bookmazon."order".shipping_address AS bookmazon_order_shipping_address, bookmazon."order".update_datetime AS bookmazon_order_update_datetime, bookmazon."order".create_datetime AS bookmazon_order_create_datetime 
FROM bookmazon."order" 
WHERE bookmazon."order".user_account = %(user_account_1)s]
[parameters: {'user_account_1': 'User0001'}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:59:37] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('2793.98'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '»O¤¤¥«¥_°Ï123454565787687412', 'update_datetime': datetime.datetime(2023, 12, 24, 13, 59, 37, 450504), 'create_datetime': datetime.datetime(2023, 12, 24, 13, 59, 37, 450504)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:59:37] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('2793.98'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '»O¤¤¥«¥_°Ï123454565787687412', 'update_datetime': datetime.datetime(2023, 12, 24, 13, 59, 37, 450504), 'create_datetime': datetime.datetime(2023, 12, 24, 13, 59, 37, 450504)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:59:37] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('2793.98'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '»O¤¤¥«¥_°Ï123454565787687412', 'update_datetime': datetime.datetime(2023, 12, 24, 13, 59, 37, 450504), 'create_datetime': datetime.datetime(2023, 12, 24, 13, 59, 37, 450504)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:59:37] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('2793.98'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '»O¤¤¥«¥_°Ï123454565787687412', 'update_datetime': datetime.datetime(2023, 12, 24, 13, 59, 37, 450504), 'create_datetime': datetime.datetime(2023, 12, 24, 13, 59, 37, 450504)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:59:37] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('2793.98'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '»O¤¤¥«¥_°Ï123454565787687412', 'update_datetime': datetime.datetime(2023, 12, 24, 13, 59, 37, 450504), 'create_datetime': datetime.datetime(2023, 12, 24, 13, 59, 37, 450504)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:59:59] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('1396.99'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '', 'update_datetime': datetime.datetime(2023, 12, 24, 13, 59, 59, 512053), 'create_datetime': datetime.datetime(2023, 12, 24, 13, 59, 59, 512053)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:59:59] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('1396.99'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '', 'update_datetime': datetime.datetime(2023, 12, 24, 13, 59, 59, 512053), 'create_datetime': datetime.datetime(2023, 12, 24, 13, 59, 59, 512053)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:59:59] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('1396.99'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '', 'update_datetime': datetime.datetime(2023, 12, 24, 13, 59, 59, 512053), 'create_datetime': datetime.datetime(2023, 12, 24, 13, 59, 59, 512053)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:59:59] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('1396.99'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '', 'update_datetime': datetime.datetime(2023, 12, 24, 13, 59, 59, 512053), 'create_datetime': datetime.datetime(2023, 12, 24, 13, 59, 59, 512053)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 13:59:59] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('1396.99'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '', 'update_datetime': datetime.datetime(2023, 12, 24, 13, 59, 59, 512053), 'create_datetime': datetime.datetime(2023, 12, 24, 13, 59, 59, 512053)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 14:01:27] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('1396.99'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '°ò¶©¥««H¸q°Ï123123123', 'update_datetime': datetime.datetime(2023, 12, 24, 14, 1, 27, 738895), 'create_datetime': datetime.datetime(2023, 12, 24, 14, 1, 27, 738895)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 14:01:27] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('1396.99'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '°ò¶©¥««H¸q°Ï123123123', 'update_datetime': datetime.datetime(2023, 12, 24, 14, 1, 27, 738895), 'create_datetime': datetime.datetime(2023, 12, 24, 14, 1, 27, 738895)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 14:01:27] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('1396.99'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '°ò¶©¥««H¸q°Ï123123123', 'update_datetime': datetime.datetime(2023, 12, 24, 14, 1, 27, 738895), 'create_datetime': datetime.datetime(2023, 12, 24, 14, 1, 27, 738895)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 14:01:27] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('1396.99'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '°ò¶©¥««H¸q°Ï123123123', 'update_datetime': datetime.datetime(2023, 12, 24, 14, 1, 27, 738895), 'create_datetime': datetime.datetime(2023, 12, 24, 14, 1, 27, 738895)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
[2023-12-24 14:01:27] {OrderService.py:67} ERROR - Create order error: (psycopg2.errors.InsufficientPrivilege) permission denied for sequence order_order_id_seq

[SQL: INSERT INTO bookmazon."order" (user_account, recipient_name, order_total_price, order_status, payment_status, shipping_status, shipping_address, update_datetime, create_datetime) VALUES (%(user_account)s, %(recipient_name)s, %(order_total_price)s, %(order_status)s, %(payment_status)s, %(shipping_status)s, %(shipping_address)s, %(update_datetime)s, %(create_datetime)s) RETURNING bookmazon."order".order_id]
[parameters: {'user_account': 'User0001', 'recipient_name': 'User0001', 'order_total_price': Decimal('1396.99'), 'order_status': '0', 'payment_status': '0', 'shipping_status': '0', 'shipping_address': '°ò¶©¥««H¸q°Ï123123123', 'update_datetime': datetime.datetime(2023, 12, 24, 14, 1, 27, 738895), 'create_datetime': datetime.datetime(2023, 12, 24, 14, 1, 27, 738895)}]
(Background on this error at: https://sqlalche.me/e/20/f405)
