{"name": "test_check_user_email_validity_success", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <test_user_service.TestUserService object at 0x0000026351879F90>\n\n    @pytest.mark.check_user_email_validity_success\n    def test_check_user_email_validity_success(self):\n        try:\n>           check_user_email_validity('rename001@gmail.cc')\n\ntest\\test_user_service.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nuser_email = 'rename001@gmail.cc'\n\n    def check_user_email_validity(user_email: str):\n        try:\n            # 檢查會員是否存在\n            existing_user = session.scalars(select(User).where(User.user_email == user_email)).first()\n        except Exception as e:\n            app_logger.error('Error checking user email validity: %s', e)\n            message = CommonSystemCode.DATABASE_FAILED.value.get('message')\n            system_code = CommonSystemCode.DATABASE_FAILED.value.get('system_code')\n            raise BusinessError(error_code=system_code, message=message)\n    \n        if existing_user is None:\n            message = UserSystemCode.EMAIL_NOT_EXISTED.value.get('message')\n            system_code = UserSystemCode.EMAIL_NOT_EXISTED.value.get('system_code')\n>           raise BusinessError(error_code=system_code, message=message)\nE           exception.BusinessError.BusinessError: 輸入電子郵件地址不存在\n\nservice\\UserService.py:303: BusinessError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_user_service.TestUserService object at 0x0000026351879F90>\n\n    @pytest.mark.check_user_email_validity_success\n    def test_check_user_email_validity_success(self):\n        try:\n            check_user_email_validity('rename001@gmail.cc')\n            assert True\n        except BusinessError:\n>           assert False\nE           assert False\n\ntest\\test_user_service.py:105: AssertionError"}, "attachments": [{"name": "log", "source": "1eed186d-bbc9-49a1-96c6-98f17d925205-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "f0b89116-57c7-4e15-a0ce-e20859fb944c-attachment.txt", "type": "text/plain"}], "start": 1703060046352, "stop": 1703060046354, "uuid": "d6dc9322-e140-4dfa-b8d8-7a905215860a", "historyId": "97b04f8d07335b89f7f124d3b9149ac7", "testCaseId": "97b04f8d07335b89f7f124d3b9149ac7", "fullName": "test.test_user_service.TestUserService#test_check_user_email_validity_success", "labels": [{"name": "tag", "value": "check_user_email_validity_success"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_user_service"}, {"name": "subSuite", "value": "TestUserService"}, {"name": "host", "value": "LAPTOP-SJL5AU2K"}, {"name": "thread", "value": "59520-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_user_service"}]}